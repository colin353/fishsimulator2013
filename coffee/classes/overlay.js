// Generated by CoffeeScript 1.6.2
var OverlayCanvasController;

OverlayCanvasController = (function() {
  function OverlayCanvasController(text) {
    var i, line1, line2, _i;

    this.relinquishcontrol = false;
    this.readytofinish = false;
    this.line1 = text;
    this.line2 = '';
    this.text = text;
    this.count = 0;
    if (text.length > 18) {
      for (i = _i = 0; _i <= 18; i = _i += 1) {
        if (text[18 - i] === ' ') {
          line1 = text.slice(0, +i + 1 || 9e9);
          line2 = text.slice(i);
          alert("Okay...");
          break;
        }
      }
    }
  }

  OverlayCanvasController.prototype.dialog = function(line1, line2) {
    viewcontroller.context.drawImage(viewcontroller.images['overlay.png'].image, 50, 450);
    viewcontroller.context.fillStyle = 'black';
    viewcontroller.context.textBaseline = 'middle';
    viewcontroller.context.textAlign = 'left;';
    viewcontroller.context.fillText(this.line1, 95, 520);
    return viewcontroller.context.fillText(this.line2, 95, 575);
  };

  OverlayCanvasController.prototype.tick = function() {
    var i, line1_now, line2_now, _i, _len, _ref;

    _ref = viewcontroller.inputstack;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      i = _ref[_i];
      switch (i) {
        case "A":
          if (this.readytofinish) {
            this.relinquishcontrol = true;
          }
      }
    }
    this.count++;
    line1_now = this.line1.slice(0, +(this.count / 3) + 1 || 9e9);
    if ((this.count / 3) - line1_now.length > 0) {
      line2_now = this.line2.slice(0, +(this.count / 3 - line1_now.length) + 1 || 9e9);
    } else {
      line2_now = '';
    }
    if (this.count / 3 < this.text.length + 1) {
      return this.dialog(line1_now, line2_now);
    } else if (this.count % 12 === 0) {
      this.readytofinish = true;
      return viewcontroller.renderSprite(32 + this.count % 24, 7.8, 7.2);
    }
  };

  return OverlayCanvasController;

})();
